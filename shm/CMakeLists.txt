cmake_minimum_required(VERSION 2.8.2)

set(CMAKE_CXX_STANDARD 17) 
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# Download and unpack googletest at configure time 
configure_file(CMakeLists.txt.in googletest-download/CMakeLists.txt) 
execute_process(COMMAND ${CMAKE_COMMAND} -G "${CMAKE_GENERATOR}" . 
  RESULT_VARIABLE result 
  WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/googletest-download ) 
if(result) 
  message(FATAL_ERROR "CMake step for googletest failed: ${result}") 
endif() 
execute_process(COMMAND ${CMAKE_COMMAND} --build . 
  RESULT_VARIABLE result 
  WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/googletest-download ) 
if(result) 
  message(FATAL_ERROR "Build step for googletest failed: ${result}") 
endif() 

# Prevent overriding the parent project's compiler/linker 
# settings on Windows 
set(gtest_force_shared_crt ON CACHE BOOL "" FORCE) 

# Add googletest directly to our build. This defines 
# the gtest and gtest_main targets. 
add_subdirectory(${CMAKE_CURRENT_BINARY_DIR}/googletest-src 
                 ${CMAKE_CURRENT_BINARY_DIR}/googletest-build 
                 EXCLUDE_FROM_ALL) 

# The gtest/gtest_main targets carry header search path 
# dependencies automatically when using CMake 2.8.11 or 
# later. Otherwise we have to add them here ourselves. 
if (CMAKE_VERSION VERSION_LESS 2.8.11) 
  include_directories("${gtest_SOURCE_DIR}/include") 
endif()

project(SHM)
FILE(GLOB SRC_FILES "*.cpp")
list(REMOVE_ITEM SRC_FILES main.cpp test.cpp)

set(FLAGS
        -Wall
        -Wextra
        -Werror
        -pedantic
        -Wconversion
        )

include_directories("${gtest_SOURCE_DIR}/include")        
add_library(${PROJECT_NAME}-lib STATIC ${SRC_FILES})

add_executable(${PROJECT_NAME} main.cpp)
add_executable(${PROJECT_NAME}-ut test.cpp)

target_compile_options(${PROJECT_NAME} PRIVATE ${FLAGS})

target_link_libraries(${PROJECT_NAME}-ut gtest_main)
target_link_libraries(${PROJECT_NAME}-ut ${PROJECT_NAME}-lib)
target_link_libraries(${PROJECT_NAME} ${PROJECT_NAME}-lib)

enable_testing()

add_test(NAME ${PROJECT_NAME}_test COMMAND ${PROJECT_NAME}-ut)
